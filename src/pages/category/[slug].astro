---
import BaseLayout from '@/layouts/BaseLayout.astro'
import { getTourCardPage } from '@/lib/queries'
import { generateBreadcrumbSchema, generateCollectionPageSchema } from '@/lib/seo'
import HeroSlideshow from '@/components/HeroSlideshow.astro'
import PhotoGallery from '@/components/PhotoGallery'
import ContactForm from '@/components/ContactForm'

export const prerender = false

const { slug } = Astro.params

// Define main categories based on activity types in the database
const categories: Record<string, { name: string, description: string }> = {
  'adventure': { 
    name: 'Adventure Tours',
    description: 'Heart-pumping adventures and adrenaline-fueled activities across the Balkans.'
  },
  'hiking': { 
    name: 'Hiking & Trekking',
    description: 'Explore pristine mountain trails, ancient paths, and breathtaking peaks.'
  },
  'cultural': { 
    name: 'Cultural Tours',
    description: 'Immerse yourself in rich history, traditions, and local life.'
  },
  'beach': { 
    name: 'Beach & Coast',
    description: 'Discover hidden beaches, crystal-clear waters, and coastal adventures.'
  },
  'winter': { 
    name: 'Winter Sports',
    description: 'Ski slopes, snowshoeing, and winter wonderland experiences.'
  },
  'cycling': { 
    name: 'Cycling & E-Biking',
    description: 'Pedal through scenic routes on traditional bikes or modern e-bikes.'
  },
  'food': { 
    name: 'Food & Wine',
    description: 'Savor local cuisine, wines, and culinary traditions.'
  },
  'nature': { 
    name: 'Nature & Wildlife',
    description: 'Connect with nature through wildlife watching and eco-tours.'
  }
}

const category = categories[slug] || { name: 'Tours', description: 'Explore all tours' }

// Get tours for this category
const tours = await getTourCardPage(
  { category: slug },
  { page: 1, limit: 24 }
)

const breadcrumbs = generateBreadcrumbSchema([
  { name: 'Home', url: 'https://tours.albaniavisit.com' },
  { name: 'Categories', url: 'https://tours.albaniavisit.com/tours' },
  { name: category.name, url: `https://tours.albaniavisit.com/category/${slug}` }
])

const categorySchema = generateCollectionPageSchema(
  category.name,
  category.description,
  tours.items,
  `https://tours.albaniavisit.com/category/${slug}`
)

// Smart slideshow: Use UNIQUE images from actual tours in this category
const uniqueSlideshowMap = new Map()
tours.items.forEach(tour => {
  if (tour.primaryImageUrl && !uniqueSlideshowMap.has(tour.primaryImageUrl)) {
    uniqueSlideshowMap.set(tour.primaryImageUrl, {
      url: tour.primaryImageUrl,
      alt: `${tour.title} - ${tour.countries.join(', ')}`
    })
  }
})
const smartCategoryImages = Array.from(uniqueSlideshowMap.values()).slice(0, 6)

// Fallback category-specific images
const categoryFallbacks = {
  'hiking': [
    { url: '/Assets/Albania/Albania_Hiking.jpeg', alt: 'Mountain Hiking in Albania' },
    { url: '/Assets/Albania/Valbona_to_Theth_Trail.jpg', alt: 'Valbona to Theth Trail' },
    { url: '/Assets/Albania/Albanian_Alps.jpg', alt: 'Albanian Alps Hiking' },
    { url: '/Assets/Kosovo/Gjeravica_Kosovo_336042834.jpeg', alt: 'Gjeravica Peak Kosovo' },
    { url: '/Assets/Montenegro/Lovcen Mountains National park Montenegro_165889777.jpeg', alt: 'Lovćen Mountains Montenegro' },
    { url: '/Assets/Albania/Accursed_Mountains.jpeg', alt: 'Accursed Mountains' }
  ],
  'adventure': [
    { url: '/Assets/Albania/Valbona_to_Theth_Trail.jpg', alt: 'Adventure Trail' },
    { url: '/Assets/Albania/Albanian_Alps.jpg', alt: 'Alpine Adventures' },
    { url: '/Assets/Kosovo/Gjeravica_Kosovo_336042834.jpeg', alt: 'Peak Adventures Kosovo' },
    { url: '/Assets/Montenegro/Montenegro_216089172.jpeg', alt: 'Montenegro Adventures' },
    { url: '/Assets/Albania/Northern_Albania_Shala_River.jpeg', alt: 'River Adventures' },
    { url: '/Assets/Albania/Accursed_Mountains.jpeg', alt: 'Mountain Adventures' }
  ],
  'cultural': [
    { url: '/Assets/Albania/Old_Mes_Bridge.jpeg', alt: 'Historic Mes Bridge' },
    { url: '/Assets/Albania/Ali_Pasha_Fortress_Porto_Palermo.jpeg', alt: 'Ali Pasha Fortress' },
    { url: '/Assets/North Macedonia/Roman_Aquaduct_in_Macedonia_484708122.jpeg', alt: 'Roman Aqueduct Macedonia' },
    { url: '/Assets/Montenegro/Moracha Monastery Montenegro_382804243.jpeg', alt: 'Morača Monastery' },
    { url: '/Assets/North Macedonia/Skopje Macedonia_230959493.jpeg', alt: 'Skopje Cultural Sites' },
    { url: '/Assets/Albania/Albanian_Flag_Porto_Palermo.jpeg', alt: 'Porto Palermo Castle' }
  ],
  'beach': [
    { url: '/Assets/Albania/Albanian_Riviera_Beach_Blue_Water.jpeg', alt: 'Albanian Riviera' },
    { url: '/Assets/Albania/albanian-riviera-5.jpg', alt: 'Albanian Coast' },
    { url: '/Assets/Albania/albanian-riviera-2.jpeg', alt: 'Coastal Paradise' },
    { url: '/Assets/Albania/Lukove_beach.jpeg', alt: 'Lukove Beach' },
    { url: '/Assets/Albania/Albania_Coast.jpeg', alt: 'Albanian Coastline' },
    { url: '/Assets/Montenegro/Kotor Montenegro_123711552.jpeg', alt: 'Bay of Kotor' }
  ],
  'nature': [
    { url: '/Assets/Albania/Lake_Prespa_Albania.jpeg', alt: 'Lake Prespa' },
    { url: '/Assets/Albania/Northern_Albania_Shala_River.jpeg', alt: 'Shala River' },
    { url: '/Assets/Albania/Albania_Lake_Koman.jpeg', alt: 'Lake Koman' },
    { url: '/Assets/Kosovo/Kucisko_Lake_Kosovo_135448859.jpeg', alt: 'Kuçishte Lake Kosovo' },
    { url: '/Assets/Kosovo/Lac Leqinat Pejë Kosovo_220878090.jpeg', alt: 'Leqinat Lakes' },
    { url: '/Assets/Albania/Valbona_Valley_Guesthouse.jpg', alt: 'Valbona Valley Nature' }
  ]
}

// Use smart images first, then fallback to category-specific images (no duplicates)
const fallbackForCategory = categoryFallbacks[slug] || categoryFallbacks['adventure']
const seenUrls = new Set(smartCategoryImages.map(img => img.url))
const slideImages = [
  ...smartCategoryImages,
  ...fallbackForCategory.filter(img => !seenUrls.has(img.url))
].slice(0, 6)

// Create unique gallery images from all tours in category
const uniqueCategoryImages = new Map()
tours.items.forEach(tour => {
  if (tour.primaryImageUrl && !uniqueCategoryImages.has(tour.primaryImageUrl)) {
    uniqueCategoryImages.set(tour.primaryImageUrl, {
      url: tour.primaryImageUrl,
      alt: `${tour.title} - ${tour.countries.join(', ')}`
    })
  }
})
const galleryImages = Array.from(uniqueCategoryImages.values())

const categoryImages = {
  'hiking': '/Assets/Albania/Albania_Hiking.jpeg',
  'adventure': '/Assets/Albania/Valbona_to_Theth_Trail.jpg',
  'cultural': '/Assets/Albania/Old_Mes_Bridge.jpeg',
  'beach': '/Assets/Albania/Albanian_Riviera_Beach_Blue_Water.jpeg',
  'multi-country': '/Assets/Albania/Accursed_Mountains.jpeg',
  'nature': '/Assets/Albania/Lake_Prespa_Albania.jpeg'
}


const ogImage = categoryImages[slug] || '/Assets/Albania/Albanian_Alps.jpg'
---

<BaseLayout 
  title={`${category.name} - AlbaniaVisit Tours`}
  description={`Discover the best ${category.name.toLowerCase()} in Albania and the Balkans. Expert guides, unforgettable experiences.`}
  ogImage={ogImage}
  jsonLd={[breadcrumbs, categorySchema]}
>
  <!-- Hero Section -->
  <section class="relative h-[70vh] min-h-[500px] flex items-center justify-center overflow-hidden">
    <HeroSlideshow images={slideImages} overlayIntensity="medium" />
    
    <div class="relative z-10 text-center text-white px-4 max-w-4xl mx-auto">
      <h1 class="text-4xl md:text-6xl font-bold mb-6 drop-shadow-2xl">{category.name}</h1>
      <p class="text-xl md:text-2xl text-gray-100 max-w-3xl mx-auto drop-shadow-lg">
        {category.description}
      </p>
      
      {tours.items.length > 0 && (
        <div class="mt-8">
          <div class="text-3xl font-bold text-accent drop-shadow-lg">{tours.items.length}</div>
          <div class="text-sm text-gray-300">Available Tours</div>
        </div>
      )}
    </div>
  </section>

  <div class="container mx-auto px-4 py-8">
    <!-- Breadcrumbs -->
    <nav class="mb-6">
      <ol class="flex items-center space-x-2 text-sm">
        <li><a href="/" class="text-gray-600 hover:text-gray-900">Home</a></li>
        <li class="text-gray-400">/</li>
        <li><a href="/tours" class="text-gray-600 hover:text-gray-900">Tours</a></li>
        <li class="text-gray-400">/</li>
        <li class="text-gray-900">{category.name}</li>
      </ol>
    </nav>

    <!-- Tours Grid -->
    {tours.items.length > 0 ? (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-12">
        {tours.items.map((tour) => (
          <article class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition">
            <div class="aspect-[4/3] relative">
              <img 
                src={tour.primaryImageUrl} 
                alt={tour.title}
                loading="lazy"
                class="w-full h-full object-cover"
              />
              {tour.featured && (
                <span class="absolute top-4 left-4 bg-accent text-white px-3 py-1 rounded-full text-sm font-semibold">
                  Featured
                </span>
              )}
            </div>
            <div class="p-5">
              <h2 class="text-lg font-bold mb-2 line-clamp-2">
                <a href={`/tours/${tour.slug}`} class="hover:text-accent">
                  {tour.title}
                </a>
              </h2>
              <p class="text-sm text-gray-600 mb-3 line-clamp-2">
                {tour.shortDescription}
              </p>
              <div class="flex items-center justify-between mb-3">
                <div class="flex gap-2">
                  {tour.durationDisplay && (
                    <span class="text-xs bg-gray-100 px-2 py-1 rounded">
                      {tour.durationDisplay}
                    </span>
                  )}
                  {tour.difficulty && (
                    <span class="text-xs bg-gray-100 px-2 py-1 rounded capitalize">
                      {tour.difficulty}
                    </span>
                  )}
                </div>
                <span class="font-bold text-sm">
                  {tour.priceMin ? `€${tour.priceMin}` : 'Price on request'}
                </span>
              </div>
              <a 
                href={`/tours/${tour.slug}`}
                class="flex items-center justify-center w-full bg-accent text-white p-3 rounded hover:bg-accent-600 transition text-sm font-medium min-h-[40px]"
              >
                View Details
              </a>
            </div>
          </article>
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <p class="text-xl text-gray-600 mb-6">No tours found in this category yet.</p>
        <a href="/tours" class="inline-flex items-center justify-center bg-accent text-white p-4 rounded-lg hover:bg-accent-600 transition font-medium min-h-[48px]">
          Browse All Tours
        </a>
      </div>
    )}

    <!-- Pagination if needed -->
    {tours.pagination.totalPages > 1 && (
      <div class="flex justify-center gap-2">
        <span class="text-sm text-gray-600">
          Showing {tours.items.length} of {tours.pagination.total} tours
        </span>
      </div>
    )}

    <!-- Related Categories -->
    <div class="mt-16 border-t pt-12 mb-6">
      <h2 class="text-2xl font-bold mb-8 text-center">Explore Other Categories</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {['adventure', 'hiking', 'cultural', 'beach'].filter(c => c !== slug).slice(0, 3).map(cat => {
          const categoryIcons = {
            adventure: '🏔️',
            hiking: '🥾',
            cultural: '🏛️',
            beach: '🏖️'
          };
          const categoryDescriptions = {
            adventure: 'Thrilling experiences and adrenaline-pumping activities',
            hiking: 'Explore mountain trails and scenic paths',
            cultural: 'Discover history, traditions, and local heritage',
            beach: 'Coastal escapes and seaside adventures'
          };
          return (
            <a 
              href={`/category/${cat}`}
              class="group bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 p-8 text-center border border-gray-100 hover:border-accent/20"
            >
              <div class="text-5xl mb-4">{categoryIcons[cat] || '🌟'}</div>
              <h3 class="text-xl font-bold capitalize mb-2 group-hover:text-accent transition-colors">{cat}</h3>
              <p class="text-sm text-gray-600">{categoryDescriptions[cat] || 'Explore more tours'}</p>
            </a>
          );
        })}
      </div>
    </div>

    <!-- Compact Gallery - Only if we have images -->
    {galleryImages.length > 0 && (
      <PhotoGallery 
        client:load
        photos={galleryImages}
        title={`More ${category.name}`}
        className="py-8"
      />
    )}
  </div>
  <!-- Contact Form Modal -->
  <ContactForm client:load />
</BaseLayout>