---
import { getOptimizedImageUrl, generateSrcSet, getPlaceholderUrl } from '@/lib/imageOptimization'

export interface Props {
  src: string
  alt: string
  width?: number
  height?: number
  class?: string
  loading?: 'lazy' | 'eager'
  sizes?: string
  quality?: 'auto' | 'auto:best' | 'auto:good' | 'auto:eco'
}

const { 
  src, 
  alt, 
  width = 1920, 
  height,
  class: className = '',
  loading = 'lazy',
  sizes = '100vw',
  quality = 'auto:best'
} = Astro.props

// Get optimized URLs
const optimizedUrl = getOptimizedImageUrl(src, {
  width,
  height,
  quality,
  format: 'auto',
  enhance: true
})

const placeholderUrl = getPlaceholderUrl(src)
const srcSet = generateSrcSet(src)
---

<picture>
  <source 
    type="image/avif" 
    srcset={srcSet}
    sizes={sizes}
  />
  <source 
    type="image/webp" 
    srcset={srcSet}
    sizes={sizes}
  />
  <img 
    src={optimizedUrl}
    srcset={srcSet}
    sizes={sizes}
    alt={alt}
    width={width}
    height={height}
    loading={loading}
    decoding="async"
    class={className}
    style={`background-image: url(${placeholderUrl}); background-size: cover; background-position: center;`}
    onload="this.style.backgroundImage='none'"
  />
</picture>